{"version":3,"sources":["utils/API.js","components/SearchForm/index.js","components/Container/index.js","components/SearchResults/index.js","components/Main/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["axios","get","SearchForm","props","className","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","onClick","handleSort","Container","style","children","SearchResults","minHeight","scope","employees","map","employee","src","picture","medium","first","last","email","phone","dob","date","Search","state","filteredEmployees","sorted","event","searchParam","target","toLowerCase","filteredList","filter","push","setState","preventDefault","sortedEmployees","sort","a","b","fa","fb","la","lb","API","then","res","data","results","split","reverse","join","catch","err","console","log","this","Component","Footer","Wrapper","App","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1fcb7b5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getEmployeeList: function() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// Input field to filter the employees array by name\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <h1 className=\"text-center\">Search By Employee Name!</h1>\n        <label htmlFor=\"name\"><h3>Employee Name:</h3></label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"name\"\n          list=\"name\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in employee name to begin\"\n          id=\"name\"\n        />\n        <button type=\"submit\" onClick={props.handleSort} className=\"btn searchButton\">\n          Sort By Name\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport \"./style.css\";\n\nfunction SearchResults(props) {\n  return (\n    <Container style={{ minHeight: \"80%\" }} className=\"container\">\n      <div className=\"searchResults\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\" className=\"header\">Picture</th>\n              <th scope=\"col\" className=\"header\">Name</th>\n              <th scope=\"col\" className=\"header\">Email</th>\n              <th scope=\"col\" className=\"header\">Phone Number</th>\n              <th scope=\"col\" className=\"header\">DOB</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.employees.map((employee) => {\n              return(<tr>\n                <td><img src={employee.picture.medium}></img></td>\n                <td className=\"name\">{employee.name.first} {employee.name.last}</td>\n                <td>{employee.email}</td>\n                <td>{employee.phone}</td>\n                <td>{employee.dob.date}</td>\n              </tr>)\n            })} \n          </tbody>\n        </table>\n      </div>\n    </Container>\n  );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport SearchForm from \"../SearchForm\";\nimport SearchResults from \"../SearchResults\";\n\nclass Search extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    sorted: false\n  };\n\n  // When the component mounts, get a list of all employees and update this.state.employees\n  componentDidMount() {\n    API.getEmployeeList()\n      .then(res => {\n          const employees = res.data.results;\n          employees.map(employee => {\n            employee.dob.date = employee.dob.date.split(\"T\")[0];\n            employee.dob.date = employee.dob.date.split(\"-\").reverse().join(\"-\");\n          })\n          this.setState({\n            employees: employees,\n            filteredEmployees: employees\n          })\n      })\n      .catch(err => console.log(err));\n  }\n  \n  // Setting state to search value\n  handleInputChange = event => {\n    // Setting target value to searchParam variable\n    let searchParam = event.target.value.toLowerCase();\n    \n    const employees = this.state.employees\n\n    const filteredList = [];\n   \n    // Filter employees array in state by name based on searchParam\n    employees.filter(employee => {\n      if (employee.name.first.toLowerCase().search(searchParam) !== -1 || employee.name.last.toLowerCase().search(searchParam) !== -1) \n      {filteredList.push(employee)}\n    });\n   \n    // Set employees array in state equal to new filtered list of employees\n    this.setState({\n      filteredEmployees: filteredList\n    });\n\n  };\n\n  // Sort employees array alphabetically\n  handleSort = event => {\n    event.preventDefault();\n\n    // Get employees and sorted from state\n    const sortedEmployees = this.state.filteredEmployees\n    let sorted = this.state.sorted;\n\n    // Sorting employees alphabetically\n    if (this.state.sorted == false) {\n      sortedEmployees.sort((a,b) => {\n        let fa = a.name.first.toLowerCase();\n        let fb = b.name.first.toLowerCase();\n        let la = a.name.last.toLowerCase();\n        let lb = b.name.last.toLowerCase();\n\n        // Set sorted state to true\n        this.setState({\n          sorted: true\n        });\n        \n        // Sorting employees by first name\n        if (fa < fb) {\n          return -1;\n        }\n\n        if (fa > fb) {\n          return 1;\n        }\n\n        // If employees have the same first name, sort by last name\n        if (fa = fb) {\n          if (la < lb) {\n            return -1;\n          }\n    \n          if (la > lb) {\n            return 1;\n          }\n        }\n\n        return 0;\n\n      })\n    }\n\n    // Sorting employees reverse alphabetically\n    if (sorted == true) {\n      // Sort employees by first name in reverse alphabetical order\n      sortedEmployees.sort((a,b) => {\n        let fa = a.name.first.toLowerCase();\n        let fb = b.name.first.toLowerCase();\n        let la = a.name.last.toLowerCase();\n        let lb = b.name.last.toLowerCase();\n\n        // Set sorted state to false\n        this.setState({\n          sorted: false\n        });\n\n        // Sorting employees by first name\n        if (fa < fb) {\n          return 1;\n        }\n\n        if (fa > fb) {\n          return -1;\n        }\n        \n        // If employees have the same first name, sort by last name\n        if (fa = fb) {\n          if (la < lb) {\n            return 1;\n          }\n    \n          if (la > lb) {\n            return -1;\n          }\n        }\n\n        return 0;\n\n      })\n    }\n\n    // Set state with sorted employees\n    this.setState({filteredEmployees: sortedEmployees});\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n            handleInputChange={this.handleInputChange}\n            handleSort={this.handleSort}\n            search={this.state.search}\n        />\n        <SearchResults\n            employees={this.state.filteredEmployees}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Nix Employee Directory 2021</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\n// import \"App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Wrapper>\n          <Main />\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}