{"ast":null,"code":"var _jsxFileName = \"/Users/cnix/Desktop/Coding_Bootcamp/employee-directory/src/pages/Main/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\"; // import SearchResults from \"../../components/SearchResults\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      employees: [],\n      filteredEmployees: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      let searchParam = event.target.value;\n      let searchParamCapital = \"\";\n\n      function capitalize(searchParam) {\n        searchParamCapital = searchParam.charAt(0).toUpperCase() + searchParam.slice(1);\n      }\n\n      capitalize(searchParam);\n      this.setState({\n        search: searchParamCapital\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const searchParam = this.state.search;\n      console.log(searchParam);\n      const filteredList = this.state.employees.filter(employee => employee.name.first === searchParam || employee.name.last === searchParam);\n      this.setState({\n        employees: filteredList\n      }); // const employeeList = this.state.employees;\n      // employeeList.map(employee => {\n      // const newList = employee.filter(employee => employee.name.first.includes(searchParam))\n      // })\n      // const newList = employeeList.filter(employee => employee.name.first.includes(searchParam))\n      // filteredList.push(newList);\n      // filter(employee => employee.name.first.includes(searchParam)));\n      // this.setState({ filteredEmployees: filteredList });\n\n      console.log(filteredList);\n    };\n  }\n\n  // When the component mounts, get a list of all employees and update this.state.employees\n  componentDidMount() {\n    API.getEmployeeList().then(res => {\n      this.setState({\n        employees: res.data.results\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        employees: this.state.employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"DOB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.employees.map(employee => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: employee.picture.medium\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [employee.name.first, \" \", employee.name.last]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.dob.date.split(\"T\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/cnix/Desktop/Coding_Bootcamp/employee-directory/src/pages/Main/index.js"],"names":["React","Component","API","Container","SearchForm","Search","state","search","employees","filteredEmployees","error","handleInputChange","event","searchParam","target","value","searchParamCapital","capitalize","charAt","toUpperCase","slice","setState","handleFormSubmit","preventDefault","console","log","filteredList","filter","employee","name","first","last","componentDidMount","getEmployeeList","then","res","data","results","catch","err","render","minHeight","map","picture","medium","email","phone","dob","date","split"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\n// import SearchResults from \"../../components/SearchResults\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all employees and update this.state.employees\n  componentDidMount() {\n    API.getEmployeeList()\n      .then(res => {\n          this.setState({ employees: res.data.results })\n      })\n      .catch(err => console.log(err));\n  }\n  \n  handleInputChange = event => {\n    let searchParam = event.target.value;\n    let searchParamCapital = \"\";\n\n    function capitalize(searchParam) {\n      searchParamCapital = searchParam.charAt(0).toUpperCase() + searchParam.slice(1);\n    }\n\n    capitalize(searchParam)\n\n    this.setState({ search: searchParamCapital });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const searchParam = this.state.search;\n   \n    console.log(searchParam);\n    const filteredList = this.state.employees.filter(employee => employee.name.first === searchParam || employee.name.last === searchParam);\n   \n    this.setState({employees: filteredList});\n\n\n    // const employeeList = this.state.employees;\n\n    // employeeList.map(employee => {\n      // const newList = employee.filter(employee => employee.name.first.includes(searchParam))\n    // })\n\n    // const newList = employeeList.filter(employee => employee.name.first.includes(searchParam))\n    // filteredList.push(newList);\n    // filter(employee => employee.name.first.includes(searchParam)));\n    // this.setState({ filteredEmployees: filteredList });\n    console.log(filteredList);\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            employees={this.state.employees}\n          />\n        <Container style={{ minHeight: \"80%\" }}>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Picture</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Phone Number</th>\n                  <th scope=\"col\">DOB</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.employees.map((employee) => {\n                  return(<tr>\n                    <td><img src={employee.picture.medium}></img></td>\n                    <td>{employee.name.first} {employee.name.last}</td>\n                    <td>{employee.email}</td>\n                    <td>{employee.phone}</td>\n                    <td>{employee.dob.date.split(\"T\")[0]}</td>\n                  </tr>)\n                })} \n              </tbody>\n            </table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}